#!/bin/sh

#execute commands on remote servers
#runremote --cmd "uptime"  --server colobus.isomerica.net --log colo.log

#while read line; do echo $line $line $line; done < $FOO

CMD=""
SERVER=""
LOGFILE=""
LOGDIR=""
SERVERLIST=()
SSHOPTIONS="-oConnectTimeout=5 -oBatchMode=yes"

COLOR_LIGHT_PURPLE='\033[1;35m'
COLOR_NC='\033[0m'

usage()
{
    cat <<EOF
Usage:
    $PROGRAM 

            [ --command | --cmd | -cmd | -c ... ]
                   the command which will be executed on the remote server

            [ --server | -server | -s "..." ]
                    the server(s) you want to run the command on

            [ --list-of-servers | --list | -list "..." ]
                    a file containing each server, OR
                    "-" to read servers from the command line

            [ --log | -log | -l "..." ]
                capture all output to a single log file

            [ --logdir | -logdir "..." ]
                create a different log for each of the servers

            [ --d | --debug | --test  ]
                don't actually run the commands

EOF
}

usage_and_exit()
{
    usage
    exit $1
}

PROGRAM=`basename $0`



while test $# -gt 0; do

	case $1 in

	--command | --cmd | --c | -c | -cmd )
		shift
		CMD="$1"
		;;

	--server | -s )
		shift
		SERVER+=("$1")
		;;

	--help | --hel | --he | --h | '--?' | -help | -hel | -he | -h | '-?' )
		usage_and_exit 0
		;;

	--log | -l | -log )
		shift
		LOGFILE=$1
		;;

	--list-of-servers | -list | --list )
		shift
		SERVERLIST=$1
        if [[ "${SERVERLIST}" == "-" ]] ; then SERVERLIST=/dev/stdin; fi
		;;

	--logdir | -logdir )
		shift
		LOGDIR=$1
		;;

	--debug | -d | --test | --echo )
        function ssh () { echo ssh "$@"; }
		;;

	-*)
		error "Unrecognized option: $1"
		;;

	*)
		break
		;;

	esac
	shift
done




if [[ -f "${SERVERLIST}" || "${SERVERLIST}" = "/dev/stdin" ]]; then
    while read line; do
        SERVER+=("$line")
    done <${SERVERLIST}
fi






MASTERLOG=logs/masterlog.txt
function logger() {
    echo "[[$@]]" > $MASTERLOG
    while read line;
        do echo $line;
    done < /dev/stdin > $MASTERLOG
}

function stderr() {
    COLOR=$1
    shift;
    echo -ne $COLOR >&2
    echo $@ >&2
    echo -e $COLOR_NC >&2
}

COLOR_BLACK='\033[0;30m'
COLOR_BLUE='\033[0;34m'
COLOR_BROWN='\033[0;33m'
COLOR_CYAN='\033[0;36m'
COLOR_GRAY='\033[1;30m'
COLOR_GREEN='\033[0;32m'
COLOR_LIGHT_BLUE='\033[1;34m'
COLOR_LIGHT_CYAN='\033[1;36m'
COLOR_LIGHT_GRAY='\033[0;37m'
COLOR_LIGHT_GREEN='\033[1;32m'
COLOR_LIGHT_PURPLE='\033[1;35m'
COLOR_LIGHT_RED='\033[1;31m'
COLOR_NC='\033[0m'
COLOR_PURPLE='\033[0;35m'
COLOR_RED='\033[0;31m'
COLOR_WHITE='\033[1;37m'
COLOR_YELLOW='\033[1;33m'


for serv in ${SERVER[@]}; do

    if [[ -d "${LOGDIR}" ]]; then LOGFILE="${LOGDIR}/$serv.log"; fi

    stderr $COLOR_LIGHT_GREEN "[$serv]"

    ( ssh $SSHOPTIONS $serv "$CMD" | tee -a $LOGFILE )
    stderr $COLOR_LIGHT_GREEN "[/$serv]"
done

